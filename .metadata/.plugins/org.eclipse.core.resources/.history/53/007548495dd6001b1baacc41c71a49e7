package com.dell.lockedme.application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.dell.lockedme.model.Users;
import com.dell.lockedme.model.UserCreds;

public class driver {

	// input data
	private static Scanner keyboard;
	private static Scanner input;
	private static Scanner lockerInput;
	// output data
	private static PrintWriter output;
	private static PrintWriter lockerOutput;
	// model to store data.
	private static Users users;
	private static UserCreds userCredentials;

	private static List<Users> userList;
	private static List<UserCreds> usersCredList;

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		initApp();
		welcomeScreen();
		signInOptions();
	}

	public static void initApp() {

		File dbFile = new File("database.txt");
		//File lockerFile = new File("locker-file.txt");

		try {
			users = new Users();
			userCredentials = new UserCreds();
			
			
			//if data available in file, then deserialize else empty object 
			try {
				FileInputStream file = new FileInputStream(dbFile);
				if (file.available() != 0) {
					ObjectInputStream in = new ObjectInputStream(file);
					ArrayList<Users> readObject = (ArrayList<Users>) in.readObject();
					userList = readObject;
					in.close();

				} else {
					userList = new ArrayList<Users>();
				}
			} catch (IOException e) {
				if (e.getClass().toString().equalsIgnoreCase("class java.io.StreamCorruptedException")) {
					System.out.println("---------");
					System.out.println("DB File corrupted");
					System.out.println("Deleting all existing users. Please register again using same username");
					System.out.println("---------");
				} else {
					System.out.println(e.getMessage());
					System.out.println("---------");
					e.printStackTrace();
					System.out.println("---------");
				}
			}
			usersCredList = new ArrayList<UserCreds>();

			// read data from db file
			input = new Scanner(dbFile);

			// red data from locker file
			//lockerInput = new Scanner(lockerFile);
			// read data from keyboard
			keyboard = new Scanner(System.in);

			// out put
			output = new PrintWriter(new FileWriter(dbFile, true));
			//lockerOutput = new PrintWriter(new FileWriter(lockerFile, true));


		} catch (IOException e) {
			System.out.println("404 : File Not Found ");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

	}

	public static void signInOptions() {
		System.out.println("1 . Registration ");
		System.out.println("2 . Login ");
		System.out.println("2 . Exit ");
		int option = keyboard.nextInt();
		do {
			switch (option) {
			case 1:
				registerUser();
				signInOptions();
				break;
			case 2:
				loginUser();
				break;
			case 3:
				System.out.println("Thank you");
				// sc.close();
				System.exit(0);
				break;
			default:
				System.out.println("Please select 1 Or 2");
				option = keyboard.nextInt();
				break;
			}
		} while (true);
		// keyboard.close();
		// input.close();
	}

	public static void lockerOptions(String inpUsername) {
		System.out.println("1 . FETCH ALL STORED CREDENTIALS ");
		System.out.println("2 . STORED CREDENTIALS ");
		int option = keyboard.nextInt();
		switch (option) {
		case 1:
			fetchCredentials(inpUsername);
			break;
		case 2:
			storeCredentials(inpUsername);
			break;
		default:
			System.out.println("Please select 1 Or 2");
			break;
		}
		lockerInput.close();
	}

	public static void registerUser() {
		Users user = new Users();
		boolean userExist = false, acceptedPass = false;
		System.out.println("==========================================");
		System.out.println("*					*");
		System.out.println("*   WELCOME TO REGISTRATION PAGE	*");
		System.out.println("*					*");
		System.out.println("==========================================");
		do {
			System.out.println("Enter Username (can be alphanumeric):");
			String username = keyboard.next();
			user.setUsername(username);
			//check if username already exist, then prompt for another username or prompt for pass
			userExist = userList.stream().anyMatch(obj -> obj.getUsername().equalsIgnoreCase(username));
			if(!username.matches("[a-zA-Z0-9]+")) {
				System.out.println("Only alphabets or numbers allowed in username");
			}
			else if(userExist) {
				System.out.println("Username taken. Please type another username");
			}
			
		}while(userExist);
		
		//user.setUsername(username);
		//minimum 6 char alphanumeric
		do {
			System.out.println("Enter alphanumeric Password-");
			System.out.println("\t Minimum 1 digit required");
			System.out.println("\t Minimum 6 & Max 12 char length");
			System.out.println("\t Only @ ! _ - allowed");
			System.out.println("\n");
			String password = keyboard.next();
			acceptedPass = password.matches("^(?=.*[0-9])([a-zA-Z0-9@!_-]){6,12}$"); 
			user.setPassword(password);
			if(!acceptedPass) {
				System.out.println("\tMinimum 1 digit required");
				System.out.println("\tMinimum 6 & Max 12 char length");
			}
		}while(!acceptedPass);
		
		if(!userExist && acceptedPass) {
			userList.add(user);
		}

		System.out.println("User Registration Suscessful !");
		output.close();

	}

	public static void loginUser() {
		System.out.println("==========================================");
		System.out.println("*					*");
		System.out.println("*   WELCOME TO LOGIN PAGE	 *");
		System.out.println("*					*");
		System.out.println("==========================================");
		System.out.println("Enter Username :");
		String inpUsername = keyboard.next();
		boolean found = false;
		while (input.hasNext() && !found) {
			if (input.next().equals(inpUsername)) {
				System.out.println("Enter Password :");
				String inpPassword = keyboard.next();
				if (input.next().equals(inpPassword)) {
					System.out.println("Login Successful ! 200OK");
					found = true;
					lockerOptions(inpUsername);
					break;
				}
			}
		}
		if (!found) {
			System.out.println("User Not Found : Login Failure : 404");
		}

	}

	public static void welcomeScreen() {
		System.out.println("==========================================");
		System.out.println("*					*");
		System.out.println("*   Welcome To LockMe.com		*");
		System.out.println("*   Your Personal Digital Locaker	*");
		System.out.println("*					*");
		System.out.println("==========================================");

	}

	// store credentails
	public static void storeCredentials(String loggedInUser) {
		System.out.println("==========================================");
		System.out.println("*					*");
		System.out.println("*   WELCOME TO DIGITAL LOCKER STORE YOUR CREDS HERE	 *");
		System.out.println("*					*");
		System.out.println("==========================================");

		// userCredentials.setLoggedInUser(loggedInUser);

		System.out.println("Enter Site Name :");
		String siteName = keyboard.next();
		userCredentials.setSiteName(siteName);

		System.out.println("Enter Username :");
		String username = keyboard.next();
		userCredentials.setUsername(username);

		System.out.println("Enter Password :");
		String password = keyboard.next();
		userCredentials.setPassword(password);

		// lockerOutput.println(userCredentials.getLoggedInUser());
		lockerOutput.println(userCredentials.getSiteName());
		lockerOutput.println(userCredentials.getUsername());
		lockerOutput.println(userCredentials.getPassword());

		System.out.println("YOUR CREDS ARE STORED AND SECURED!");
		lockerOutput.close();
	}

	// fetch credentials
	public static void fetchCredentials(String inpUsername) {
		System.out.println("==========================================");
		System.out.println("*					*");
		System.out.println("*   WELCOME TO DIGITAL LOCKER 	 *");
		System.out.println("*   YOUR CREDS ARE 	 *");
		System.out.println("*					*");
		System.out.println("==========================================");
		System.out.println(inpUsername);

		while (lockerInput.hasNext()) {
//			System.out.println(lockerInput.hasNext());
			if (lockerInput.next().equals(inpUsername)) {
				System.out.println("Site Name: " + lockerInput.next());
				System.out.println("User Name: " + lockerInput.next());
				System.out.println("User Password: " + lockerInput.next());
			}
		}

	}
}
